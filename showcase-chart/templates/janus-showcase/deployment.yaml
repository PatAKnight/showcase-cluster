apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "showcase-chart.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "showcase-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "showcase-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "showcase-chart.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/app-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    spec:
      serviceAccountName: default
      containers:
        - name: {{ include "showcase-chart.name" . }}
          resources: 
            {{- toYaml .Values.resources | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - node
            - packages/backend
            - --config
            - app-config.yaml
            - --config
            - app-config.production.yaml
          envFrom:
            - secretRef:
                name: janus-idp
            - secretRef:
                name: janus-idp-pguser-janus-idp
            - configMapRef:
                name: {{ include "showcase-chart.fullname" . }}-bucket-claim
            - secretRef:
                name: {{ include "showcase-chart.fullname" . }}-bucket-claim
          volumeMounts:
            - name: ca-cert
              mountPath: "/mnt/certs"
          ports:
            - name: backend
              containerPort: {{ .Values.backstage.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.backstage.port }}
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
        {{- if .Values.oauth.enabled }}
        - name: {{ include "showcase-chart.name" . }}-oauth-proxy
          envFrom:
            - secretRef:
                name: oauth2-proxy-config
          ports:
            - name: {{ .Values.oauth.name }}
              containerPort: {{ .Values.oauth.port }}
              protocol: TCP
          imagePullPolicy: {{ .Values.oauth.image.pullPolicy }}
          terminationMessagePolicy: file
          image: "{{ .Values.oauth.image.repository }}:{{ .Values.oauth.image.tag }}"
          args:
            - '--provider=oidc'
            - '--email-domain=*'
            - '--upstream=http://localhost:{{ .Values.backstage.port }}'
            - '--http-address=0.0.0.0:{{ .Values.oauth.port }}'
            - '--skip-provider-button'
        {{- end }}
      volumes:
        - name: ca-cert
          secret:
            secretName: janus-idp-cluster-cert
            items:
              - key: ca.crt
                path: ca.crt
