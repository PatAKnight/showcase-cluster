apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    {{- include "test-chart.labels" . | nindent 4 }}
    deploymentconfig: {{ include "test-chart.fullname" . }}-sonarqube
  name: {{ include "test-chart.fullname" . }}-sonarqube
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.sonarqube.replicas }}
  selector:
    {{- include "test-chart.selectorLabels" . | nindent 4 }}
    deploymentconfig: {{ include "test-chart.fullname" . }}-sonarqube
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/container.sonarqube.image.entrypoint: '["./bin/run.sh"]'
      labels:
        {{- include "test-chart.labels" . | nindent 8 }}
        deploymentconfig: {{ include "test-chart.fullname" . }}-sonarqube
    spec:
      containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: {{ include "test-chart.fullname" . }}-pguser-sonarqube
                key: password
          - name: SONAR_JDBC_URL
            valueFrom:
              secretKeyRef:
                name: {{ include "test-chart.fullname" . }}-pguser-sonarqube
                key: jdbc-uri
          - name: SONARQUBE_JDBC_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "test-chart.fullname" . }}-pguser-sonarqube
                key: user
          image: ' '
          imagePullPolicy: IfNotPresent
          name: sonarqube
          ports:
          - containerPort: {{ .Values.sonarqube.service.port }}
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: {{ .Values.sonarqube.service.port }}
              path: /
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: {{ .Values.sonarqube.service.port }}
              path: /
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - sonarqube
      from:
        kind: ImageStreamTag
        name: {{ .Values.sonarqube.imageStream.name }}
    type: ImageChange
